mov R0L,16
lea   R3,"hello world\0"
int 21H

mov R0L,16
lea   R3,"nice!\0"
int 21
mov R0L,64
int 21H

指令格式
第一位标志指令类型
第二位标志指令寻址方式
后面不定长 二元操作
寄存器编号
R0-R6------> 0-6
SP------>7
BP------>8
flag------->9
均表示高位
有低位如     R0L为00
             R0H为01
             R0为02
             R1为12


mov :80 hex(50h)
*********************
mov R,R  ---->0
mov R,i   ----->1
mov R,[R] ----->2
mov [R],R----->3
mov R,s[R]------>12
mov s[R],R------>13

R,[R+i]----->07
[R+i],R----->08

mov [R+R],R----->09
mov R,[R+R]----->0a
同样也有17
        18


============================

lea:81 hex(51h)
*****************
lea R,R ----->0
lea R,[R] ----->2
lea R,i------->1

=============================
int:hex(E0h)
直接接操作数
=============================
jmp 0x40
jz 0x41
jnz 0x42
jH 0x43
jL 0x44
        05型 直接跟寄存器编号
		06型 跟立即数
====================
inc 0x30
dex 0x31
cmp 0x32
cmp 两种类型 00 cmp R,R
             01 cmp R,i
====================
add 0x20
sub 0x21
xor 0x22
and 0x23
or 0x24
全部都有两种类型
              00 R,R-----
			  01 R,i
not 0x25    直接跟寄存器
====================
NOP 0x5F
CPU空转
====================
0x10 push  05型 跟寄存器
           06型 跟立即数
		   
0x11 pop  直接跟寄存器
4字节对齐
====================
0x60 call 05型 跟寄存器
          06型 跟立即数
0x61 ret  05型 跟寄存器
          06型 跟立即数